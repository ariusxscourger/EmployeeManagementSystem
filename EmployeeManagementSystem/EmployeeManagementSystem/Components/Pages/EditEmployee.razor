@page "/edit-employee/{id:int}"
@using EmployeeManagementSystem.Entity
@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="edit-employee-page container my-4">
    <!-- Header -->
    <h3 class="text-primary fw-bold mb-4">Edit Employee</h3>

    @if (employee == null)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">Loading employee details...</p>
        </div>
    }
    else
    {
        <EditForm Model="employee" OnValidSubmit="HandleSubmit" class="card p-4 shadow-sm" FormName="Edit-Employee">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger mb-3" />

            <!-- First Name -->
            <div class="mb-3">
                <label for="firstName" class="form-label">First Name</label>
                <InputText id="firstName" class="form-control" @bind-Value="employee.FirstName" placeholder="Enter first name" />
            </div>

            <!-- Last Name -->
            <div class="mb-3">
                <label for="lastName" class="form-label">Last Name</label>
                <InputText id="lastName" class="form-control" @bind-Value="employee.LastName" placeholder="Enter last name" />
            </div>

            <!-- Email -->
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <InputText id="email" class="form-control" @bind-Value="employee.Email" placeholder="Enter email address" />
            </div>

            <!-- Phone Number -->
            <div class="mb-3">
                <label for="phoneNumber" class="form-label">Phone Number</label>
                <InputText id="phoneNumber" class="form-control" @bind-Value="employee.PhoneNumber" placeholder="Enter phone number" />
            </div>

            <!-- Hire Date -->
            <div class="mb-3">
                <label for="hireDate" class="form-label">Hire Date</label>
                <InputDate id="hireDate" class="form-control" @bind-Value="employee.HireDate" />
            </div>

            <!-- Salary -->
            <div class="mb-3">
                <label for="salary" class="form-label">Salary</label>
                <InputNumber id="salary" class="form-control" @bind-Value="employee.Salary" placeholder="Enter salary" />
            </div>

            <!-- Job -->
            <div class="mb-3">
                <label for="job" class="form-label">Job</label>
                <InputSelect id="job" class="form-select" @bind-Value="employee.JobId">
                    <option value="">-- Select Job --</option>
                    @foreach (var job in jobs)
                    {
                        <option value="@job.JobId">@job.JobTitle</option>
                    }
                </InputSelect>
            </div>

            <!-- Department -->
            <div class="mb-3">
                <label for="department" class="form-label">Department</label>
                <InputSelect id="department" class="form-select" @bind-Value="employee.DepartmentId">
                    <option value="">-- Select Department --</option>
                    @foreach (var department in departments)
                    {
                        <option value="@department.DepartmentId">@department.DepartmentName</option>
                    }
                </InputSelect>
            </div>

            <!-- Manager -->
            <div class="mb-4">
                <label for="manager" class="form-label">Manager</label>
                <InputSelect id="manager" class="form-select" @bind-Value="employee.ManagerId">
                    <option value="">-- Select Manager --</option>
                    @foreach (var manager in managers)
                    {
                        <option value="@manager.EmployeeId">@manager.FirstName @manager.LastName</option>
                    }
                </InputSelect>
            </div>

            <!-- Buttons -->
            <div class="d-flex justify-content-end">
                <button type="submit" class="btn btn-primary shadow">
                    <i class="bi bi-save"></i> Save
                </button>
                <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">
                    <i class="bi bi-x-circle"></i> Cancel
                </button>
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter] public int id { get; set; }

    private Employee? employee;
    private List<Job> jobs = new();
    private List<Department> departments = new();
    private List<Employee> managers = new();

    protected override async Task OnInitializedAsync()
    {
        // Fetch employee details by id
        employee = await EmployeeService.GetEmployeeByIdAsync(id);

        if (employee == null)
        {
            NavigationManager.NavigateTo("/employees");
            return;
        }

        // Load supporting data
        jobs = await EmployeeService.GetJobsAsync();
        departments = await EmployeeService.GetDepartmentsAsync();
        managers = (await EmployeeService.GetEmployeesAsync())
            .Where(e => e.ManagerId == null) // Managers without managers
            .ToList();
    }

    private async Task HandleSubmit()
    {
        if (employee != null)
        {
            await EmployeeService.UpdateEmployeeAsync(employee);
            NavigationManager.NavigateTo("/employees");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/employees");
    }
}
