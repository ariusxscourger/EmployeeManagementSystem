@page "/departments"
@using EmployeeManagementSystem.Entity
@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="departments-page container my-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="text-primary fw-bold">Departments</h3>
        <button class="btn btn-primary btn-lg shadow" @onclick="AddDepartment">
            <i class="bi bi-plus-circle"></i> Add New Department
        </button>
    </div>

    <!-- Table -->
    @if (departments == null)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">Loading departments...</p>
        </div>
    }
    else if (departments.Count == 0)
    {
        <div class="alert alert-info text-center">
            <i class="bi bi-info-circle"></i> No departments found. Click <strong>"Add New Department"</strong> to create one.
        </div>
    }
    else
    {
        <div class="table-responsive shadow-sm rounded">
            <table class="table table-hover table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Department Name</th>
                        <th>Manager</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var department in departments)
                    {
                        <tr>
                            <td>@department.DepartmentName</td>
                            <td>@(department.Manager == null ? "None" : department.Manager.FirstName + " " + department.Manager.LastName)</td>
                            <td>
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-warning" @onclick="() => EditDepartment(department.DepartmentId)">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </button>
                                    <button class="btn btn-sm btn-danger" @onclick="() => DeleteDepartment(department.DepartmentId)">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<Department>? departments;

    protected override async Task OnInitializedAsync()
    {
        departments = await EmployeeService.GetDepartmentsAsync();
    }

    private void AddDepartment() => NavigationManager.NavigateTo("/add-department");
    private void EditDepartment(int id) => NavigationManager.NavigateTo($"/edit-department/{id}");
    private async Task DeleteDepartment(int id)
    {
        await EmployeeService.DeleteDepartmentAsync(id);
        departments = await EmployeeService.GetDepartmentsAsync(); // Refresh the list
    }
}
